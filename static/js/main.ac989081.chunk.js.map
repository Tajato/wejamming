{"version":3,"sources":["util/Spotify.js","components/SearchBar/SearchBar.js","components/Track/Track.js","components/Tracklist/Tracklist.js","components/SearchResults/SearchResults.js","components/Playlist/Playlist.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["accessToken","SearchBar","props","state","term","search","bind","handleTermChange","this","onSearch","e","setState","target","value","className","onChange","placeholder","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onRemove","track","onAdd","name","artist","album","renderAction","Tracklist","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","savePlaylist","trackUris","length","userId","headers","Authorization","fetch","then","response","json","jsonResponse","method","body","JSON","stringify","playlistId","uris","items","artists","uri","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","oldTrack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ac989081.chunk.js","sourcesContent":["\r\nconst clientId = '060f61f4655845d18bba18ecfde7e099';\r\nconst redirectUri = 'https://obedient-station.surge.sh/';\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n    getAccessToken() {\r\n        if (accessToken) {\r\n            return accessToken;\r\n        }\r\n        //check for acess token\r\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n\r\n        if (accessTokenMatch && expiresInMatch) {\r\n            accessToken = accessTokenMatch[1];\r\n            const expiresIn = Number(expiresInMatch[1]);\r\n            // clear parameters so method won't grab them after expiration\r\n            window.setTimeout(() => accessToken = ' ', expiresIn * 1000);\r\n            window.history.pushState('Access Token', null, '/');\r\n            return accessToken;\r\n        } else {\r\n            const accessUrl =`https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n            window.location = accessUrl;\r\n\r\n        }\r\n\r\n    },\r\n\r\n   \r\n    savePlaylist(name, trackUris) {\r\n        if (!name || !trackUris.length){\r\n            return;\r\n        }\r\n        const accessToken = Spotify.getAccessToken();\r\n        const headers = {Authorization: `Bearer ${accessToken}`};\r\n        let userId;\r\n        return fetch('https://api.spotify.com/v1/me',{headers: headers}).then(response => response.json()\r\n        ).then(jsonResponse => {\r\n            userId = jsonResponse.id\r\n            return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`,{\r\n                headers: headers,\r\n                method: 'POST',\r\n                body: JSON.stringify({name: name})\r\n            }).then(response => response.json()\r\n            ).then(jsonResponse => {\r\n                const playlistId = jsonResponse.id;\r\n                return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`,{\r\n                    headers: headers,\r\n                    method: 'POST',\r\n                    body: JSON.stringify({uris: trackUris})\r\n                })\r\n            })\r\n        })\r\n    },\r\n    async search(term) {\r\n        const accessToken = Spotify.getAccessToken();\r\n        const response = await fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n            headers: {\r\n                Authorization: `Bearer ${accessToken}`\r\n            }\r\n        });\r\n        const jsonResponse = await response.json();\r\n        if (!jsonResponse.tracks) {\r\n            return [];\r\n        }\r\n        return jsonResponse.tracks.items.map(track => ({\r\n            id: track.id,\r\n            name: track.name,\r\n            artists: track.artists[0].name,\r\n            album: track.album.name,\r\n            uri: track.uri\r\n        }));\r\n\r\n    }\r\n};\r\n\r\nexport default Spotify;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nexport class SearchBar extends React.Component {\r\nconstructor(props) {\r\n  super(props);\r\n  this.state = {\r\n    term:''\r\n  };\r\n  this.search = this.search.bind(this)\r\n  this.handleTermChange = this.handleTermChange.bind(this)\r\n}\r\n  search(){\r\n    this.props.onSearch(this.state.term)\r\n  }\r\n  handleTermChange(e) {\r\n    this.setState({term: e.target.value})\r\n  }\r\n  render() {\r\n return (\r\n    <div className=\"SearchBar\">\r\n  <input onChange = {this.handleTermChange} placeholder=\"Enter A Song, Album, or Artist\" />\r\n  <button onClick = {this.search}className=\"SearchButton\">SEARCH</button>\r\n</div>\r\n );\r\n}\r\n}","import { render } from '@testing-library/react';\r\nimport React from 'react';\r\nimport './Track.css';\r\n\r\nexport class Track extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.addTrack = this.addTrack.bind(this);\r\n      this.removeTrack = this.removeTrack.bind(this)\r\n     \r\n    }\r\n    renderAction() {\r\n        \r\n        if (this.props.isRemoval) {\r\n            return <button onClick = {this.removeTrack} className=\"Track-action\">-</button>\r\n\r\n        } else {\r\n            return <button onClick = {this.addTrack} className=\"Track-action\">+</button>\r\n\r\n        }\r\n    }\r\n    removeTrack() {\r\n      this.props.onRemove(this.props.track)\r\n    }\r\n    addTrack() {\r\n        this.props.onAdd(this.props.track)\r\n    }\r\n    render() {\r\n return (\r\n<div className=\"Track\">\r\n  <div className=\"Track-information\">\r\n    <h3>{this.props.track.name}</h3>\r\n    <p> {this.props.track.artist} | {this.props.track.album}</p>\r\n  </div>\r\n  <button className=\"Track-action\"> {this.renderAction()}</button>\r\n</div>\r\n);\r\n }\r\n}","import React from 'react'\r\nimport './Tracklist.css'\r\nimport {Track} from '../Track/Track'\r\nexport class Tracklist extends React.Component {\r\n    render() {\r\n     return (\r\n        <div className=\"TrackList\">\r\n        {\r\n        this.props.tracks.map(track => {\r\n            return <Track onRemove = {this.props.onRemove} isRemoval = {this.props.isRemoval} onAdd={this.props.onAdd} key={track.id} track={track} />\r\n        })\r\n        \r\n        }\r\n        </div>);\r\n     \r\n    \r\n}\r\n}","import React from 'react'\r\nimport {Tracklist} from '../Tracklist/Tracklist'\r\nimport './SearchResults.css';\r\nexport class SearchResults extends React.Component {\r\n    render() {\r\n    return (\r\n        <div className=\"SearchResults\">\r\n  <h2>Results</h2>\r\n  <Tracklist isRemoval = {false} onAdd = {this.props.onAdd}tracks={this.props.searchResults}/> \r\n</div>\r\n    );\r\n    }\r\n}","import './Playlist.css'\r\nimport {Tracklist} from '../Tracklist/Tracklist'\r\nimport React from 'react';\r\n\r\n\r\nexport class Playlist extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleNameChange = this.handleNameChange.bind(this)\r\n  }\r\n  handleNameChange(e) {\r\n     \r\n    this.props.onNameChange(e.target.value);\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n    <div onChange = {this.handleNameChange} className=\"Playlist\">\r\n  <input onChange = {this.handleNameChange} defaultValue={'New Playlist'} />\r\n    <Tracklist  isRemoval = {true } onRemove = {this.props.onRemove} tracks = {this.props.playlistTracks}  /> \r\n  <button onClick = {this.props.onSave} className=\"Playlist-save\">SAVE TO SPOTIFY</button>\r\n</div>);\r\n}\r\n}","// import logo from './logo.svg';\nimport './App.css';\nimport {SearchBar} from '../SearchBar/SearchBar';\nimport {SearchResults} from '../SearchResults/SearchResults';\nimport {Playlist} from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\nimport React from 'react';\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state  = {\n  searchResults: [],\n  playlistName: 'My Playlist',\n  playlistTracks:[]\n    };\n  this.addTrack = this.addTrack.bind(this);\n  this.removeTrack = this.removeTrack.bind(this);\n  this.updatePlaylistName = this.updatePlaylistName.bind(this)\n  this.savePlaylist = this.savePlaylist.bind(this)\n  this.search = this.search.bind(this)\n}\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if (tracks.find(savedTrack => savedTrack.id === track.id)) {\n     return;\n    }\n    tracks.push(track);\n    this.setState(tracks)\n  }\n  removeTrack(track) {\n    let tracks  = this.state.playlistTracks;\n     tracks = tracks.filter(oldTrack => oldTrack.id !== track.id);\n    this.setState({playlistTracks: tracks})\n  }\n  updatePlaylistName(name){\n    this.setState({playlistName: name});\n  }\n  savePlaylist() {\n   \n    const trackUris = this.state.playlistTracks.map(track => track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris\n      ).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    })\n  }\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults})\n    })\n  }\n    render() {\n    return (\n      <div>\n  <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n  <div className=\"App\">\n     <SearchBar onSearch = {this.search}/>\n    <div className=\"App-playlist\">\n      <SearchResults onAdd = {this.addTrack} searchResults={this.state.searchResults}/>\n      <Playlist onSave = {this.savePlaylist} onNameChange = {this.updatePlaylistName} onRemove = {this.removeTrack} playlistName={this.state.playlistName} playlistTracks={this.state.playlistTracks} />\n    </div>\n  </div>\n</div>\n    );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}